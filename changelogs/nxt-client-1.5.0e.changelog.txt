This is an experimental release for the Voting System and Phasing. It enables
these features on testnet, and is a required update for all testnet nodes.

It is also possible to run this version on main net, but the block at which the
new features will be enabled has not been set yet.


New features:


Voting System.

Voting System API calls:

CreatePoll, CastVote, GetPoll, GetPolls, GetPollResult, GetPollVote,
GetPollVotes, SearchPolls.

Polls processing is optional. If nxt.processPolls=false (default is true), vote
counting is not done and no poll results are stored. This can be used to reduce
the load on lower performance nodes. It is still possible to get the results of
a poll using getPollResult, as long as the required vote and balances data
hasn't been trimmed yet.

Regardless of the nxt.processPolls setting, votes for polls that finished
before the last trim height (1441 blocks by default) are deleted and only
aggregate results, if processing is enabled, are kept.

The fee to create a poll is 10 NXT for a poll with up to 20 options, with 1 NXT
additional fee for any additional option (max 100 options are possible).


Phasing.

Phasing API calls:

ApproveTransaction, GetAccountPendingTransactions, GetAssetPendingTransactions,
GetCurrencyPendingTransactions, GetPhasingPoll, GetPhasingPolls,
GetPhasingPollVote, GetPhasingPollVotes, GetVoterPendingTransactions.

A transaction of any type can be phased by adding a phased=true and an
appropriate set of phasing parameters. Phased transactions are accepted in the
blockchain immediately (subject to all usual validations), but are executed
only at finish height, if still valid and if the required quorum has been met.
If not approved, or not valid at finish height, they remain in the blockchain
but are never executed, and any changes they caused to the sender unconfirmed
balance are reversed, except that the fee is not refunded.

It is possible to vote for (approve) up to 20 phased transactions with a single
approval transaction. This transaction will be accepted in the blockchain only
if all phased transactions it is voting for are already in it. This can be used
to create coupling between phased transactions and some escrow schemes based on
such coupling.

It is also possible to make any transaction phased without needing voting for
approval. This can be used to create transactions with deferred execution.

Similar to voting, the phasing data for phased transaction that finished before
the last trim height is also deleted and only the aggregate approval results
are kept.

The fee for making a transaction phased depends on the voting model selected.
For by-account voting with no minimum balance, or no voting needed, it is 1 NXT
in addition to the regular fee for that particular transaction type. For voting
that depends on voter balances, the additional phasing fee is 20 NXT.

The fee for approving a phased transaction is 1 NXT for each phased
transaction included in the vote.


Variable size messages, encrypted messages, digital goods deliveries. After VS
block, messages and encrypted messages will be allowed to be up to 40 kbytes
long instead of 1000 bytes, with 1 NXT fee for each 1024 bytes. Digital goods
deliveries can also be up to 40 kbytes, with 1 NXT fee for each 1024 bytes
after the first 10k. A single transaction is always limited not to exceed the
maximum block payload length, currently 255 * 176 bytes.


Other new APIs:

GetOrderTrades - given an askOrder, bidOrder, or both, returns all trades that
were executed as a result of this order.

GetPlugins - returns a list of all installed plugins.

DumpPeers - returns all active peers of a certain version.

Shutdown - shuts down the server. Takes an optional scan parameter, if true
the derived tables are truncated and a full rescan with validation is scheduled
on next start. The resulting nxt_db folder is smaller, and a node bootstrapped
with this database is going to verify the blockchain and rebuild all derived
tables on start. While this ensures validity of the blockchain and all tables,
it cannot verify that this is the current consensus blockchain and not a fork,
therefore providing such a database for download is still not trustless.


Changed APIs:

CreateTransaction - to facilitate debugging and to allow preparing transaction
bytes and json even for transactions that are currently invalid, if broadcast
parameter is false, all relevant transaction fields (json, bytes, hash, etc)
are still included in the result even in the case of invalid transaction.
If broadcast=true, those fields are returned only in case of successful
transaction broadcast, otherwise only the error messages are returned.
This change affects all APIs that end up creating a new transaction.

GetConstants - in addition to adding the new transaction types and subtypes,
and the voting models, the format of the resulting json has been changed.

Added optional timestamp parameter to getExchanges and getTrades.

Added optional account parameter and pagination support to getCurrencyFounders.

Always include errorCode and errorDescription in some API results that only had
an error field in case of an error.

Limit number of records returned by all APIs that support pagination to
nxt.maxAPIRecords at a time (default 100), unless the admin password is
provided or is not needed.

AddPeer adds an isNewlyAdded boolean to the returned peer json, indicating
whether the peer was not already known.


Other important changes:

Fixed transaction ordering in AE order matching to always be by transaction
index instead of by id, to take effect after Voting System Block.

Enforce nxt.adminPassword if set, even if the APIServer is listening on
localhost only.

Added nxt.ignorePeerAnnouncedAddress and nxt.cjdnsOnly properties, relevant
only for cjdns users or multihomed nodes.

Default initial peers are now stored in nxt.defaultPeers and
nxt.testnetDefaultPeers instead of being populated by NxtDbVersion on database
creation.

This release requires Java 8 and will not run or compile with Java 7.

Updated Jetty to version 9.2.10 and Bouncy Castle to version 1.52. If unpacking
on top of a previous installation, delete the old lib folder first.

This release will perform a database upgrade with a full rescan on first start.
